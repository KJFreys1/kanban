{"version":3,"sources":["LandingPage.js","Card.js","Column.js","modals/CardInfo.js","modals/RecycleInfo.js","modals/AlertClear.js","Dashboard.js","App.js","index.js"],"names":["LandingPage","props","className","onClick","history","push","Card","handleMenuSelect","e","data","action","handleEdit","newData","card","task","column","toggleModal","cardStyle","backgroundColor","pref","color","bgCard","cardText","id","draggableId","index","provided","snapshot","otherProps","draggableProps","style","isDragging","dragHandleProps","ref","innerRef","content","image","marginRight","marginTop","description","handleDeleteCard","columnIndex","numColumns","handleMoveCard","Column","useState","info","setInfo","title","setTitle","staticTitle","setStaticTitle","showButton","setShowButton","bgSecondary","hoverStyle","setHoverStyle","text","textOffset","setTextOffset","textFocus","setTextFocus","useEffect","scrollRef","useRef","inputRef","handleNewCardSelect","handleDeleteListSelect","handleDeleteList","handleReorderNewestSelect","handleReorderList","handleReorderOldestSelect","handleStaticToggle","handleInfoChange","target","value","handleSubmit","preventDefault","uuidv4","handleNewCard","handleTextFocus","handleTextBlur","handleTextHover","handleTextUnhover","current","scrollIntoView","behavior","focus","formTitle","onSubmit","handleEditList","prevState","type","onChange","onBlur","submitBtn","highlight","colStyle","onMouseOver","bgPrimary","onMouseOut","droppableId","droppableProps","tasks","map","i","key","handleEditCard","placeholder","length","border","onFocus","onMouseLeave","CardInfo","close","addCard","editCard","deleteCard","setContent","setDescription","setImage","getBase64","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","error","readAsDataURL","aria-hidden","newCard","updated","Date","toJSON","slice","replace","htmlFor","name","minRows","date","src","height","width","alt","files","then","base64","console","debug","warning","RecycleInfo","display","recycle","columns","taskIds","retrieveList","handleRetrieve","removeList","handleRemove","AlertClear","alertStyle","show","transform","boxShadow","clear","D_COL","columnOrder","colorSchemes","mint","projTitle","ocean","punk","pallette","rustic","defPreferences","Dashboard","ls","get","mainData","setMainData","preferences","setPreferences","newTitle","setNewTitle","newTitleStyle","setNewTitleStyle","newTitleFocus","setNewTitleFocus","modal","setModal","setRecycle","alertClear","setAlertClear","modalDef","setModalDef","hamburger","setHamburger","set","toggleRecycle","toggleAlertClear","newState","_date","getTime","start","finish","newTasks","filter","newColumn","splice","indexOf","newColumnOrder","newRecycle","direction","tempTasks","sort","a","b","handlePreferenceSelect","newScheme","colId","taskId","newColumns","forEach","newId","handleNewList","onDragEnd","destination","source","startTaskIds","Array","from","newStart","finishTaskIds","newFinish","newTaskIds","App","path","exact","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bf9b918f.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function LandingPage(props) {\n  const handleNav = () => {\n    props.history.push(\"/dashboard\")\n  }\n\n  return (\n    <div className=\"lp-body\">\n      <div className=\"lp-center\">\n        <div className=\"float-left\">\n          <h1>Kanban Board</h1>\n          <p>Organize your life for a minty-fresh mind</p>\n          <hr></hr>\n          <p>This simple, yet powerful tool to help manage your tasks.</p>\n          <button className=\"call-to-action\" onClick={handleNav}>\n            Get Started\n          </button>\n        </div>\n        <div className=\"float-right img\">\n\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\"\nimport { Draggable } from 'react-beautiful-dnd'\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\"\nimport { FaImage, FaBook } from 'react-icons/fa'\n\nfunction Card(props) {\n    const handleMenuSelect = (e, data) => {\n        data.action()\n    }\n\n    const handleEdit = () => {\n        let newData = {\n            card: props.task,\n            column: props.column\n        }\n        props.toggleModal(newData)\n    }\n\n    const handleDelete = () => {\n        let newData = {\n            card: {\n                id: props.task.id,\n                content: props.task.content,\n                description: props.task.description\n            },\n            column: {\n                id: props.column.id\n            }\n        }\n        props.handleDeleteCard(newData)\n    }\n\n    const handleMoveRight = () => {\n        props.handleMoveCard(props.task, props.columnIndex)\n    }\n\n    const cardStyle = {\n        backgroundColor: props.pref.color.bgCard,\n        color: props.pref.color.cardText\n    }\n\n    return (\n        <>\n            <ContextMenuTrigger id={props.task.id}>\n                <Draggable\n                    draggableId={props.task.id}\n                    index={props.index}\n                >\n                    {(provided, snapshot) => {\n                        const otherProps = {\n                            ...provided.draggableProps,\n                            style: {\n                                ...provided.draggableProps.style,\n                                ...cardStyle,\n                            }\n                        }\n                        return (\n                            <div\n                                className={`t-box ${snapshot.isDragging\n                                    ? \"fade-t-box\"\n                                    : null\n                                    }`}\n                                {...otherProps}\n                                {...provided.dragHandleProps}\n                                ref={provided.innerRef}\n                                onClick={handleEdit}\n                            >\n                                {props.task.content}\n                                <div>\n                                    {props.task.image ? <FaImage style={{marginRight: \"8px\", marginTop: \"5px\"}} /> : null}\n                                    {props.task.description ? <FaBook style={{marginRight: \"8px\", marginTop: \"5px\"}} /> : null}\n                                </div>\n                            </div>\n                        )\n                    }}\n                </Draggable>\n            </ContextMenuTrigger>\n\n            <ContextMenu id={props.task.id} className=\"context-menu\">\n                <MenuItem\n                    className=\"context-item\"\n                    data={{ action: handleEdit, id: props.task.id }}\n                    onClick={handleMenuSelect}\n                >\n                    Edit\n                </MenuItem>\n                <MenuItem\n                    className=\"context-item\"\n                    data={{ action: handleDelete, id: props.task.id }}\n                    onClick={handleMenuSelect}\n                >\n                    Delete\n                </MenuItem>\n                {props.columnIndex < props.numColumns - 1\n                    ? <MenuItem\n                        className=\"context-item\"\n                        data={{ action: handleMoveRight, id: props.task.id }}\n                        onClick={handleMenuSelect}\n                    >\n                        Move Right\n                    </MenuItem>\n                    : null}\n            </ContextMenu>\n        </>\n    )\n}\n\nexport default Card","import React, { useState, useEffect, useRef } from \"react\"\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\nimport { v4 as uuidv4 } from 'uuid'\nimport { FaAngleRight } from 'react-icons/fa'\nimport TextareaAutosize from 'react-textarea-autosize'\nimport Card from \"./Card\"\n\nfunction Column(props) {\n  const [info, setInfo] = useState(\"\")\n  const [title, setTitle] = useState(props.column.title)\n  const [staticTitle, setStaticTitle] = useState(true)\n  const [showButton, setShowButton] = useState(false)\n  const [hoverStyle, setHoverStyle] = useState({ backgroundColor: props.pref.color.bgSecondary })\n  const [textOffset, setTextOffset] = useState({ color: props.pref.color.text })\n  const [textFocus, setTextFocus] = useState(false)\n\n  useEffect(() => {\n    setHoverStyle({ backgroundColor: props.pref.color.bgSecondary })\n    setTextOffset({ color: props.pref.color.text })\n  }, [props.pref])\n\n  const scrollRef = useRef(null)\n\n  const inputRef = useRef(null)\n\n  const handleNewCardSelect = () => {\n    setStaticTitle(true)\n    props.toggleModal({ column: props.column })\n  }\n\n  const handleDeleteListSelect = () => {\n    setStaticTitle(true)\n    const newData = {\n      column: {\n        id: props.column.id\n      }\n    }\n    props.handleDeleteList(newData)\n  }\n\n  const handleReorderNewestSelect = () => {\n    const newData = {\n      column: {\n        id: props.column.id\n      }\n    }\n    props.handleReorderList(newData, \"newest\")\n  }\n\n  const handleReorderOldestSelect = () => {\n    const newData = {\n      column: {\n        id: props.column.id\n      }\n    }\n    props.handleReorderList(newData, \"oldest\")\n  }\n\n  const handleStaticToggle = () => {\n    setStaticTitle(false)\n  }\n\n  const handleBlur = () => {\n    setStaticTitle(true)\n    setTitle(props.column.title)\n  }\n\n  const handleInfoChange = e => {\n    setInfo(e.target.value)\n  }\n\n  const handleChangeTitle = e => {\n    setTitle(e.target.value)\n  }\n\n  const handleTitleSubmit = e => {\n    e.preventDefault()\n    let newData = {\n      column: {\n        id: props.column.id,\n        title\n      }\n    }\n    props.handleEditList(newData)\n    setStaticTitle(prevState => !prevState)\n  }\n\n  const handleSubmit = e => {\n    if (e) e.preventDefault()\n\n    if (info === \"\") return\n    let newData = {\n      card: {\n        id: uuidv4(),\n        content: info\n      },\n      column: {\n        id: props.column.id\n      }\n    }\n    props.handleNewCard(newData)\n    setInfo(\"\")\n  }\n\n  const handleTextFocus = () => {\n    setShowButton(true)\n    setTextOffset({ color: props.pref.color.cardText })\n    setTextFocus(true)\n  }\n\n  const handleTextBlur = () => {\n    setShowButton(false)\n    setTextOffset({ color: props.pref.color.text })\n    setTextFocus(false)\n    handleSubmit()\n  }\n\n  const handleTextHover = () => {\n    setTextOffset({ color: props.pref.color.cardText })\n  }\n\n  const handleTextUnhover = () => {\n    if (!textFocus) setTextOffset({ color: props.pref.color.text })\n  }\n\n  useEffect(() => {\n    if (showButton) scrollRef.current.scrollIntoView({ behavior: \"smooth\" })\n  }, [showButton])\n\n  useEffect(() => {\n    if (!staticTitle) inputRef.current.focus()\n  }, [staticTitle])\n\n  const formTitle = (\n    <form onSubmit={handleTitleSubmit}>\n      <input ref={inputRef} className=\"col-title-input\" type=\"text\" value={title} onChange={handleChangeTitle} onBlur={handleBlur}></input>\n    </form>\n  )\n\n  const submitBtn = (\n    <button type=\"submit\" style={{ backgroundColor: props.pref.color.highlight }}>Submit</button>\n  )\n\n  const colStyle = {\n    backgroundColor: props.pref.color.bgSecondary\n  }\n\n  return (\n    <Draggable\n      draggableId={props.column.id}\n      index={props.index}\n    >\n      {(provided) => {\n        const otherProps = {\n          ...provided.draggableProps,\n          style: {\n            ...provided.draggableProps.style,\n            ...colStyle,\n          }\n        }\n        return (\n          <div\n            className=\"column\"\n            {...otherProps}\n            ref={provided.innerRef}\n          >\n            <header\n              {...provided.dragHandleProps}\n              className=\"my-col-head\"\n            >\n              {staticTitle\n                ? <h1 className=\"col-title\" onClick={handleStaticToggle}>{props.column.title}</h1>\n                : formTitle\n              }\n              <span className=\"spacer\" />\n              <div className=\"dropdown\">\n                <button\n                  className=\"dropbtn\"\n                  style={{ ...hoverStyle, color: props.pref.color.text }}\n                  onMouseOver={() => setHoverStyle({ backgroundColor: props.pref.color.bgPrimary })}\n                  onMouseOut={() => setHoverStyle({ backgroundColor: props.pref.color.bgSecondary })}\n                ><FaAngleRight /></button>\n                <div className=\"dropdown-content\">\n                  <div className=\"drop-select\" onClick={handleNewCardSelect}>New Card</div>\n                  <div className=\"drop-select\" onClick={handleStaticToggle}>Edit List</div>\n                  <div className=\"drop-select\" onClick={handleDeleteListSelect}>Discard List</div>\n                  <div className=\"drop-break\"></div>\n                  <div className=\"drop-select\" onClick={handleReorderOldestSelect}>Newest First</div>\n                  <div className=\"drop-select\" onClick={handleReorderNewestSelect}>Oldest First</div>\n                </div>\n              </div>\n            </header>\n\n            <div className=\"t-container-outer\">\n              <Droppable\n                droppableId={props.column.id}\n                type=\"task\"\n              >\n                {(provided) => (\n                  <div\n                    className=\"t-container\"\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                  >\n                    {props.tasks.map((task, i) => (\n                      <Card\n                        key={task.id}\n                        pref={props.pref}\n                        task={task}\n                        index={i}\n                        column={props.column}\n                        columnIndex={props.index}\n                        numColumns={props.numColumns}\n                        handleMoveCard={props.handleMoveCard}\n                        handleEditCard={props.handleEditCard}\n                        handleDeleteCard={props.handleDeleteCard}\n                        toggleModal={props.toggleModal}\n                      />\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </div>\n            <span className=\"spacer\"></span>\n            <form className=\"new-card-form\" style={{ backgroundColor: props.pref.color.bgSecondary }} onSubmit={handleSubmit}>\n              <TextareaAutosize\n                value={showButton || info.length > 0 ? info : \"+ Add new card\"}\n                placeholder=\"+ Add new card\"\n                style={{ border: `1px solid ${props.pref.color.bgSecondary}`, ...textOffset }}\n                onChange={handleInfoChange}\n                onFocus={handleTextFocus}\n                onBlur={handleTextBlur}\n                onMouseOver={handleTextHover}\n                onMouseLeave={handleTextUnhover}\n              />\n              {showButton ? submitBtn : null}\n            </form>\n            <span ref={scrollRef} ></span>\n          </div>\n        )\n      }}\n    </Draggable>\n  )\n}\n\nexport default Column","import React, { useState } from \"react\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport TextareaAutosize from \"react-textarea-autosize\"\n\nexport default function CardInfo({\n  data,\n  close,\n  addCard,\n  editCard,\n  deleteCard,\n  pref,\n}) {\n  const [content, setContent] = useState(data.card ? data.card.content : \"\")\n  const [description, setDescription] = useState(data.card ? data.card.description : \"\")\n  const [image, setImage] = useState(data.card ? data.card.image : null)\n\n  const handleContentChange = (e) => {\n    setContent(e.target.value)\n  }\n\n  const handleDescriptionChange = (e) => {\n    setDescription(e.target.value)\n  }\n\n  const handleDeleteBtn = () => {\n    deleteCard(data)\n    close()\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (content === \"\") {\n      close()\n      return\n    }\n    if (data.card) {\n      const newCard = {\n        card: {\n          ...data.card,\n          content,\n          description,\n          image,\n          updated: new Date().toJSON().slice(0, 10).replace(/-/g, '/')\n        },\n      }\n      editCard(newCard)\n    } else {\n      const newData = {\n        card: {\n          id: uuidv4(),\n          content,\n          description,\n        },\n        column: {\n          id: data.column.id,\n        },\n      }\n      addCard(newData)\n    }\n    close()\n  }\n\n  const imageUpload = e => {\n    const file = e.target.files[0]\n    getBase64(file).then(base64 => {\n      setImage(base64)\n      // ls.set(\"image\", base64)\n      console.debug(\"file stored\", base64)\n    })\n  }\n\n  const getBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader()\n      reader.onload = () => resolve(reader.result)\n      reader.onerror = error => reject(error)\n      reader.readAsDataURL(file)\n    })\n  }\n\n  return (\n    <div className=\"card-modal-outer\">\n      <div className=\"card-modal-inner\" style={{backgroundColor: pref.color.bgSecondary}}>\n        <h1 aria-hidden=\"true\" className=\"close-modal\" onClick={close}>&times;</h1>\n        <form className=\"card-modal-form\" onSubmit={handleSubmit}>\n          <div className=\"modal-top\">\n            <label htmlFor=\"content\">From the {data.column.title} list:</label>\n            <span className=\"spacer\"></span>\n          </div>\n          <TextareaAutosize\n            className=\"modal-ta-content\"\n            name=\"content\"\n            placeholder=\"Click to add content...\"\n            value={content}\n            onChange={handleContentChange}\n          />\n          <label htmlFor=\"description\">Description</label>\n          <TextareaAutosize\n            className=\"modal-ta-desc\"\n            name=\"description\"\n            placeholder=\"Click to add description...\"\n            value={description}\n            onChange={handleDescriptionChange}\n            minRows={2}\n          />\n          {data.card && data.card.date\n            ? <p>Created on {data.card.date}</p>\n            : null\n          }\n          {data.card && data.card.updated\n            ? <p>Last edited on {data.card.updated}</p>\n            : null\n          }\n          {image ? <img src={image} height={200} width={200} style={{marginTop: \"20px\"}} alt=\"uploaded from local storage\" /> : null}\n          <input\n            type=\"file\"\n            id=\"imageFile\"\n            name='imageFile'\n            onChange={imageUpload}\n          />\n          <div className=\"btn-container\">\n            <button\n              className=\"submit-btn\"\n              type=\"submit\"\n              style={{ backgroundColor: pref.color.highlight }}\n            >\n              Save Information\n            </button>\n            {data.card ? (\n              <button\n                className=\"delete-btn\"\n                style={{ backgroundColor: pref.color.warning }}\n                onClick={handleDeleteBtn}\n              >\n                Delete Card\n              </button>\n            ) : null}\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\n\nexport default function RecycleInfo(props) {\n    const handleRetrieve = column => {\n        const newData = { column }\n        props.retrieveList(newData)\n        props.close()\n    }\n\n    const handleRemove = column => {\n        const newData = { column }\n        props.removeList(newData)\n    }\n\n    const display = props.data.recycle.map((id, i) => {\n        let column = props.data.columns[id]\n        return (\n            <div key={i} className=\"recycle-item\" style={{color: props.pref.color.cardText}}>\n                <div className=\"recycle-card-title\">{column.title}</div>\n                <span className=\"spacer\"></span>\n                <div className=\"recycle-card-num\">Cards: {column.taskIds.length}</div>\n                <div className=\"button-container\">\n                    <button className=\"retrieve-btn\" style={{ backgroundColor: props.pref.color.highlight }} onClick={() => handleRetrieve(column)}>Retrieve List</button>\n                    <button className=\"delete-btn\" style={{ backgroundColor: props.pref.color.warning }} onClick={() => handleRemove(column)}>Delete List</button>\n                </div>\n            </div>\n        )\n\n    })\n\n    return (\n        <div className=\"card-modal-outer\">\n            <div className=\"card-modal-inner\" style={{backgroundColor: props.pref.color.bgSecondary}}>\n                <div className=\"recycle-head\">\n                    <h1 className=\"recycle-title\">Recycle Bin</h1>\n                    <span className=\"spacer\"></span>\n                    <div aria-hidden=\"true\" className=\"close-modal\" onClick={props.close}>\n                        &times;\n                    </div>\n                </div>\n                <div className=\"recycle-item-container\">\n                    {display}\n                </div>\n                {!display.length ? <p className=\"recycle-msg\">Nothing in the recycle bin</p> : null}\n            </div>\n        </div>\n    )\n}","import React from 'react'\n\nexport default function AlertClear(props) {\n    const handleYes = () => {\n        props.clear()\n        props.close()\n    }\n\n    const handleNo = () => {\n        props.close()\n    }\n\n    const alertStyle = {\n        backgroundColor: props.pref.color.bgCard,\n        color: props.pref.color.cardText\n    }\n\n    return (\n        <div \n            className=\"alert-clear\"\n            style={props.show\n                ? {...alertStyle, transform: \"translateY(0)\"}\n                : {...alertStyle, transform: \"translateY(-300px)\", boxShadow: \"none\"}\n            }\n        >\n            <h1>Are you sure you want to clear the board?</h1>\n            <p>All information stored on this board will be lost forever.</p>\n            <div className=\"alert-btn-grp\">\n                <button onClick={handleYes} style={{backgroundColor: props.pref.color.highlight}}>Yes</button>\n                <button onClick={handleNo} style={{backgroundColor: props.pref.color.warning}}>No</button>\n            </div>\n        </div>\n    )\n}","import React, { useState, useEffect } from \"react\"\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport ls from \"local-storage\"\nimport Column from \"./Column\"\nimport CardInfo from \"./modals/CardInfo\"\nimport RecycleInfo from \"./modals/RecycleInfo\"\nimport AlertClear from \"./modals/AlertClear\"\nimport \"./styles/style.css\"\n\nconst D_COL = {\n  tasks: {},\n  columns: {\n    \"column-1\": {\n      id: \"column-1\",\n      title: \"To Do\",\n      taskIds: [],\n    },\n    \"column-2\": {\n      id: \"column-2\",\n      title: \"In Progress\",\n      taskIds: [],\n    },\n    \"column-3\": {\n      id: \"column-3\",\n      title: \"Finished\",\n      taskIds: [],\n    },\n  },\n  columnOrder: [\"column-1\", \"column-2\", \"column-3\"],\n  recycle: [],\n}\n\nconst colorSchemes = {\n  mint: {\n    text: \"#081c15\",\n    bgPrimary: \"#95d5b2\",\n    bgSecondary: \"#d8f3dc\",\n    bgCard: \"#ffffff\",\n    cardText: \"#001427\",\n    highlight: \"#2d6a4f\",\n    warning: \"#d00000\",\n    projTitle: \"#ffffff\"\n  },\n  ocean: {\n    text: \"#03045e\",\n    bgPrimary: \"#00b4d8\",\n    bgSecondary: \"#90e0ef\",\n    bgCard: \"#ffffff\",\n    cardText: \"#001427\",\n    highlight: \"#023e8a\",\n    warning: \"#d00000\",\n    projTitle: \"#ffffff\"\n  },\n  punk: {\n    text: \"#ffffff\",\n    bgPrimary: \"#002855\",\n    bgSecondary: \"#f72585\",\n    bgCard: \"#ffffff\",\n    cardText: \"#001427\",\n    highlight: \"#8900f2\",\n    warning: \"#6a040f\"\n  },\n  pallette: {\n    text: \"#0f4c5c\",\n    bgPrimary: \"#d8e2dc\",\n    bgSecondary: \"#f4acb7\",\n    bgCard: \"#ffffff\",\n    cardText: \"#001427\",\n    highlight: \"#6d6875\",\n    warning: \"#d00000\",\n    projTitle: \"#ffffff\"\n  }, \n  rustic: {\n    text: \"#2b2d42\",\n    bgPrimary: \"#8a817c\",\n    bgSecondary: \"#bcb8b1\",\n    bgCard: \"#ffffff\",\n    cardText: \"#001427\",\n    highlight: \"#463f3a\",\n    warning: \"#a4161a\",\n    projTitle: \"#ffffff\"\n  }\n}\n\nconst defPreferences = {\n  color: colorSchemes.mint,\n}\n\nexport default function Dashboard(props) {\n  const [mainData, setMainData] = useState(ls.get(\"mainData\") || D_COL)\n  const [preferences, setPreferences] = useState(ls.get(\"preferences\") || defPreferences)\n  const [newTitle, setNewTitle] = useState(\"\")\n  const [newTitleStyle, setNewTitleStyle] = useState({\n    backgroundColor: preferences.color.bgSecondary,\n    color: preferences.color.text\n  })\n  const [newTitleFocus, setNewTitleFocus] = useState(false)\n  const [modal, setModal] = useState(false)\n  const [recycle, setRecycle] = useState(false)\n  const [alertClear, setAlertClear] = useState(false)\n  const [modalDef, setModalDef] = useState()\n  const [hamburger, setHamburger] = useState(false)\n\n  useEffect(() => {\n    ls.set(\"mainData\", mainData)\n  }, [mainData])\n\n  useEffect(() => {\n    ls.set(\"preferences\", preferences)\n    setNewTitleStyle({\n      backgroundColor: preferences.color.bgSecondary,\n      color: preferences.color.text\n    })\n  }, [preferences])\n\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result\n\n    if (!destination) {\n      return\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return\n    }\n\n    if (type === \"column\") {\n      const newColumnOrder = Array.from(mainData.columnOrder)\n      newColumnOrder.splice(source.index, 1)\n      newColumnOrder.splice(destination.index, 0, draggableId)\n\n      const newState = {\n        ...mainData,\n        columnOrder: newColumnOrder,\n      }\n      setMainData(newState)\n      return\n    }\n\n    const start = mainData.columns[source.droppableId]\n    const finish = mainData.columns[destination.droppableId]\n\n    if (start === finish) {\n      const newTaskIds = Array.from(start.taskIds)\n      newTaskIds.splice(source.index, 1)\n      newTaskIds.splice(destination.index, 0, draggableId)\n\n      const newColumn = { ...start, taskIds: newTaskIds }\n\n      const newState = {\n        ...mainData,\n        columns: {\n          ...mainData.columns,\n          [newColumn.id]: newColumn,\n        },\n      }\n\n      setMainData(newState)\n      return\n    }\n\n    const startTaskIds = Array.from(start.taskIds)\n    startTaskIds.splice(source.index, 1)\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds,\n    }\n\n    const finishTaskIds = Array.from(finish.taskIds)\n    finishTaskIds.splice(destination.index, 0, draggableId)\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds,\n    }\n\n    const newState = {\n      ...mainData,\n      columns: {\n        ...mainData.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    }\n\n    setMainData(newState)\n  }\n\n  const toggleModal = (newData) => {\n    setModalDef(newData ? newData : null)\n    setModal((prevState) => !prevState)\n  }\n\n  const toggleRecycle = () => {\n    setRecycle((prevState) => !prevState)\n  }\n\n  const toggleAlertClear = () => {\n    setAlertClear((prevState) => !prevState)\n  }\n\n  const handleNewCard = (newData) => {\n    const newState = {\n      ...mainData,\n      tasks: {\n        ...mainData.tasks,\n        [newData.card.id]: {\n          id: newData.card.id,\n          content: newData.card.content,\n          description: newData.card.description,\n          date: new Date().toJSON().slice(0, 10).replace(/-/g, \"/\"),\n          _date: new Date().getTime()\n        },\n      },\n      columns: {\n        ...mainData.columns,\n        [newData.column.id]: {\n          ...mainData.columns[newData.column.id],\n          taskIds: [\n            ...mainData.columns[newData.column.id].taskIds,\n            newData.card.id,\n          ],\n        },\n      },\n    }\n    setMainData(newState)\n  }\n\n  const handleMoveCard = (task, index) => {\n    const start = { ...mainData.columns[mainData.columnOrder[index]] }\n    const finish = { ...mainData.columns[mainData.columnOrder[index + 1]] }\n\n    const newTasks = [...start.taskIds].filter((id) => id !== task.id)\n\n    finish.taskIds.push(task.id)\n\n    const newState = {\n      ...mainData,\n      columns: {\n        ...mainData.columns,\n        [start.id]: {\n          ...start,\n          taskIds: newTasks,\n        },\n        [finish.id]: finish,\n      },\n    }\n    setMainData(newState)\n  }\n\n  const handleEditCard = (newData) => {\n    const newState = {\n      ...mainData,\n      tasks: {\n        ...mainData.tasks,\n        [newData.card.id]: { ...newData.card },\n      },\n    }\n    setMainData(newState)\n  }\n\n  const handleDeleteCard = (newData) => {\n    const newColumn = { ...mainData.columns[newData.column.id] }\n    newColumn.taskIds.splice(newColumn.taskIds.indexOf(newData.card.id), 1)\n\n    const newTasks = { ...mainData.tasks }\n    delete newTasks[newData.card.id]\n\n    const newState = {\n      ...mainData,\n      tasks: newTasks,\n      columns: {\n        ...mainData.columns,\n        [newData.column.id]: newColumn,\n      },\n    }\n    setMainData(newState)\n  }\n\n  const handleNewList = () => {\n    let newId = uuidv4()\n    const newState = {\n      ...mainData,\n      columns: {\n        ...mainData.columns,\n        [newId]: {\n          id: newId,\n          title: \"Click to Edit\",\n          taskIds: [],\n        },\n      },\n      columnOrder: [...mainData.columnOrder, newId],\n    }\n    setMainData(newState)\n  }\n\n  const handleEditList = (newData) => {\n    const newState = {\n      ...mainData,\n      columns: {\n        ...mainData.columns,\n        [newData.column.id]: {\n          ...mainData.columns[newData.column.id],\n          title: newData.column.title,\n        },\n      },\n    }\n    setMainData(newState)\n  }\n\n  const handleDeleteList = (newData) => {\n    const newColumnOrder = [...mainData.columnOrder].filter(\n      (id) => id !== newData.column.id\n    )\n\n    const newRecycle = [...mainData.recycle]\n    newRecycle.push(newData.column.id)\n\n    const newState = {\n      ...mainData,\n      columnOrder: newColumnOrder,\n      recycle: newRecycle,\n    }\n    setMainData(newState)\n  }\n\n  const handleRetrieveList = (newData) => {\n    const newRecycle = [...mainData.recycle].filter(\n      (id) => id !== newData.column.id\n    )\n\n    const newColumnOrder = [...mainData.columnOrder]\n    newColumnOrder.push(newData.column.id)\n\n    const newState = {\n      ...mainData,\n      columnOrder: newColumnOrder,\n      recycle: newRecycle,\n    }\n    setMainData(newState)\n  }\n\n  const handleRemoveList = (newData) => {\n    const newRecycle = [...mainData.recycle].filter(\n      (id) => id !== newData.column.id\n    )\n\n    const newTasks = { ...mainData.tasks }\n    const newColumns = { ...mainData.columns }\n    newColumns[newData.column.id].taskIds.forEach((id) => {\n      delete newTasks[id]\n    })\n    delete newColumns[newData.column.id]\n\n    const newState = {\n      ...mainData,\n      tasks: newTasks,\n      columns: newColumns,\n      recycle: newRecycle,\n    }\n    setMainData(newState)\n  }\n\n  const handleReorderList = (newData, direction) => {\n    const tempTasks = {...mainData.tasks}\n    const newColumn = {...mainData.columns[newData.column.id]}\n    \n    if (direction === \"newest\") {\n      newColumn.taskIds.sort((a, b) => tempTasks[a]._date - tempTasks[b]._date)\n    } else if (direction === \"oldest\") {\n      newColumn.taskIds.sort((a, b) => tempTasks[b]._date - tempTasks[a]._date)\n    } else {\n      return\n    }\n\n    const newState = {\n      ...mainData,\n      columns: {\n        ...mainData.columns,\n        [newData.column.id]: newColumn\n      }\n    }\n    setMainData(newState)\n  }\n\n  const toggleHamburger = () => {\n    setHamburger((prevState) => !prevState)\n  }\n\n  const handleNewListSelect = () => {\n    setHamburger(false)\n    handleNewList()\n  }\n\n  const handleRecycleSelect = () => {\n    setHamburger(false)\n    toggleRecycle()\n  }\n\n  const handlePreferenceSelect = (newScheme) => {\n    setPreferences({ ...preferences, color: colorSchemes[newScheme] })\n    setHamburger(false)\n  }\n\n  const handleClearSelect = () => {\n    setHamburger(false)\n    toggleAlertClear()\n  }\n\n  const handleHomeSelect = () => {\n    props.history.push(\"/\")\n  }\n\n  const clearData = () => {\n    setMainData(D_COL)\n  }\n\n  const handleNewTitleFocus = () => {\n    setNewTitleFocus(true)\n    setNewTitleStyle({\n      backgroundColor: preferences.color.bgCard,\n      color: preferences.color.cardText\n    })\n  }\n\n  const handleNewTitleBlur = () => {\n    setNewTitleFocus(false)\n    setNewTitleStyle({\n      backgroundColor: preferences.color.bgSecondary,\n      color: preferences.color.text\n    })\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    let newId = uuidv4()\n    const newState = {\n      ...mainData,\n      columns: {\n        ...mainData.columns,\n        [newId]: {\n          id: newId,\n          title: newTitle,\n          taskIds: [],\n        },\n      },\n      columnOrder: [...mainData.columnOrder, newId],\n    }\n    setMainData(newState)\n    setNewTitle(\"\")\n  }\n\n  let display = mainData.columnOrder.map((colId, i) => {\n    const column = mainData.columns[colId]\n    const tasks = column.taskIds.map((taskId) => mainData.tasks[taskId])\n\n    return (\n      <Column\n        key={column.id}\n        pref={preferences}\n        column={column}\n        tasks={tasks}\n        index={i}\n        numColumns={mainData.columnOrder.length}\n        handleNewCard={handleNewCard}\n        handleMoveCard={handleMoveCard}\n        handleEditCard={handleEditCard}\n        handleDeleteCard={handleDeleteCard}\n        handleEditList={handleEditList}\n        handleReorderList={handleReorderList}\n        handleDeleteList={handleDeleteList}\n        toggleModal={toggleModal}\n      />\n    )\n  })\n\n  return (\n    <div\n      id=\"dashboard\"\n      style={{\n        backgroundColor: preferences.color.bgPrimary,\n        color: preferences.color.text,\n      }}\n    >\n      {modal ? (\n        <CardInfo\n          data={modalDef}\n          pref={preferences}\n          close={toggleModal}\n          addCard={handleNewCard}\n          editCard={handleEditCard}\n          deleteCard={handleDeleteCard}\n        />\n      ) : null}\n      {recycle ? (\n        <RecycleInfo\n          data={mainData}\n          pref={preferences}\n          close={toggleRecycle}\n          retrieveList={handleRetrieveList}\n          removeList={handleRemoveList}\n        />\n      ) : null}\n\n      <AlertClear\n        show={alertClear}\n        close={toggleAlertClear}\n        clear={clearData}\n        pref={preferences}\n      />\n\n      <header className=\"dash-header\" style={{backgroundColor: preferences.color.highlight}}>\n        <h2 className=\"dash-title\" style={{color: preferences.color.projTitle}}>Kanban</h2>\n        <span className=\"spacer\"></span>\n        <div className=\"ham-drop\">\n          <div\n            className={`hamburger ${hamburger ? \"ham-active\" : null}`}\n            onClick={toggleHamburger}\n          >\n            <div className=\"ham-line ham1\"></div>\n            <div className=\"ham-line ham2\"></div>\n            <div className=\"ham-line ham3\"></div>\n          </div>\n          <div\n            className={`ham-content ${hamburger ? null : \"ham-content-hide\"}`}\n          >\n            <div className=\"ham-select\" onClick={handleNewListSelect}>\n              New List\n            </div>\n            <div className=\"ham-select\" onClick={handleRecycleSelect}>\n              Recylce Bin\n            </div>\n            <div className=\"ham-select ham-space\">\n              <div>Preferences</div>\n              <div className=\"pref-content\">\n                <div\n                  className=\"ham-select\"\n                  onClick={() => handlePreferenceSelect(\"mint\")}\n                >\n                  Mint\n                </div>\n                <div\n                  className=\"ham-select\"\n                  onClick={() => handlePreferenceSelect(\"ocean\")}\n                >\n                  Ocean\n                </div>\n                <div\n                  className=\"ham-select\"\n                  onClick={() => handlePreferenceSelect(\"punk\")}\n                >\n                  Punk\n                </div>\n                <div\n                  className=\"ham-select\"\n                  onClick={() => handlePreferenceSelect(\"pallette\")}\n                >\n                  Pallette\n                </div>\n                <div\n                  className=\"ham-select\"\n                  onClick={() => handlePreferenceSelect(\"rustic\")}\n                >\n                  Rustic\n                </div>\n              </div>\n            </div>\n            <div className=\"ham-select\" onClick={handleClearSelect}>\n              Clear Board\n            </div>\n            <div className=\"ham-select\" onClick={handleHomeSelect}>\n              Back Home\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <DragDropContext\n        onDragEnd={onDragEnd}\n      >\n        <div className=\"drop-container\">\n          {mainData.columnOrder.length \n          ? <Droppable\n            droppableId=\"all-columns\"\n            direction=\"horizontal\"\n            type=\"column\"\n          >\n            {(provided) => (\n              <div\n                className=\"col-container\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {display}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n          : null}\n          <form onSubmit={handleSubmit} className=\"new-list-form\">\n            <input \n              className=\"new-list-parabtn\" \n              style={newTitleStyle}\n              value={newTitleFocus || newTitle.length > 0 ? newTitle : \"+ Add new list\"}\n              placeholder=\"+ Add new list\"\n              onFocus={handleNewTitleFocus}\n              onBlur={handleNewTitleBlur}\n              onChange={e => setNewTitle(e.target.value)}\n            ></input>\n          </form>\n          <div className=\"col-container-space\"></div>\n        </div>\n      </DragDropContext>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\nimport LandingPage from './LandingPage'\nimport Dashboard from './Dashboard'\n\nexport default function App() {\n    return (\n        <main>\n            <Route path=\"/\" exact render={props => <LandingPage {...props} /> } />\n            <Route path=\"/dashboard\" render={props => <Dashboard {...props} /> } />\n        </main>\n    )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <Router><App /></Router>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}