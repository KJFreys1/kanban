{"version":3,"sources":["Card.js","Column.js","App.js","index.js"],"names":["Card","props","draggableId","task","id","index","provided","snapshot","className","isDragging","draggableProps","dragHandleProps","ref","innerRef","content","Column","useState","info","setInfo","handleInfoChange","e","target","value","handleSubmit","preventDefault","newData","card","uuidv4","column","handleNewCard","title","droppableId","type","isDraggingOver","droppableProps","tasks","map","idx","key","placeholder","onSubmit","onChange","D_COL","columns","taskIds","columnOrder","App","mainData","setMainData","newState","display","colId","i","taskId","onClick","newId","onDragEnd","result","destination","source","start","finish","startTaskIds","Array","from","splice","newStart","finishTaskIds","newFinish","newTaskIds","newColumn","newColumnOrder","direction","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c46f0e0.chunk.js","sourcesContent":["import React from \"react\";\nimport { Draggable } from 'react-beautiful-dnd'\n\nfunction Card(props) {\n    // const handleChange = () => {\n    //     let tempVar = [...props.columns]\n    //     tempVar[props.colID].cards[props.cardID] = \"new\"\n    //     props.change(tempVar)\n    // }\n\n    // return(\n    //     <div>\n    //         <p onClick={handleChange}>{props.data}</p>\n    //     </div>\n    // )\n\n    return (\n        <Draggable \n            draggableId={props.task.id} \n            index={props.index}\n        >\n            {(provided, snapshot) => (\n                <div \n                    className={`t-box ${snapshot.isDragging \n                            ? \"blue\" \n                            : null\n                    }`} \n                    {...provided.draggableProps} \n                    {...provided.dragHandleProps} \n                    ref={provided.innerRef}\n                    // isDragging={snapshot.isDragging}\n                >\n                    {/* <div className=\"handle\" {...provided.dragHandleProps} /> */}\n                    {props.task.content}\n                </div>\n            )}\n        </Draggable>\n    )\n}\n\nexport default Card","import React, { useState } from \"react\";\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\nimport { v4 as uuidv4 } from 'uuid'\nimport Card from \"./Card\"\n\nfunction Column(props) {\n  const [info, setInfo] = useState(\"\")\n\n  const handleInfoChange = e => {\n    setInfo(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    let newData = {\n      card: {\n        id: uuidv4(),\n        content: info\n      },\n      column: {\n        id: props.column.id\n      }\n    }\n    props.handleNewCard(newData)\n    setInfo(\"\")\n  }\n\n  return (\n    <Draggable \n      draggableId={props.column.id}\n      index={props.index}\n    >\n      {(provided) => (\n        <div \n          className=\"column\"\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n        >\n          <header {...provided.dragHandleProps} className=\"col-header\">\n            <h1 className=\"col-title\">{props.column.title}</h1>\n            <span className=\"spacer\"/>\n            <button className=\"add-task-btn\">+</button>\n          </header>\n          <Droppable \n            droppableId={props.column.id} \n            type=\"task\"\n          >\n            {(provided, snapshot) => (\n              <div \n                className={`t-container ${snapshot.isDraggingOver ? \"gray\" : null}`}\n                ref={provided.innerRef} \n                {...provided.droppableProps}\n                // isDraggingOver={snapshot.isDraggingOver}\n              >\n                {props.tasks.map((task, idx) => <Card key={task.id} task={task} index={idx} />)}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n          <form onSubmit={handleSubmit}>\n            <textarea value={info} onChange={handleInfoChange}></textarea>\n            <button type=\"sumbit\">Submit</button>\n          </form>\n        </div>\n      )}\n    </Draggable>\n  )\n}\n\nexport default Column","import React, { useState } from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\"\nimport { v4 as uuidv4 } from 'uuid'\nimport Column from \"./Column\";\n\nimport \"./styles/style.css\"\n\nconst D_COL = {\n  tasks: {\n    'task-1': {id: 'task-1', content: 'Take out trash'},\n    'task-2': {id: 'task-2', content: 'Clean dishes'},\n    'task-3': {id: 'task-3', content: 'Take dogs out'},\n    'task-4': {id: 'task-4', content: 'Make bed'},\n    'task-5': {id: 'task-5', content: 'Shower'},\n    'task-6': {id: 'task-6', content: 'Laundry'}\n  },\n  columns: {\n    'column-1': {\n      id: 'column-1',\n      title: 'To Do',\n      taskIds: ['task-1', 'task-2', 'task-3', 'task-4']\n    }, \n    'column-2': {\n      id: 'column-2',\n      title: 'In Progress',\n      taskIds: ['task-5', 'task-6']\n    },\n    'column-3': {\n      id: 'column-3',\n      title: 'Finished',\n      taskIds: []\n    }\n  },\n  columnOrder: ['column-1', 'column-2', 'column-3']\n}\n\nfunction App() {\n  const [mainData, setMainData] = useState(D_COL)\n\n  // const onDragStart = () => {\n  //   document.body.style.color = \"orange\"\n  // }\n\n  // const onDragUpdate = update => {\n  //   const { destination } = update\n  //   const opacity = destination\n  //     ? destination.index / Object.keys(mainData.tasks).length  \n  //     : 0\n  //   document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`\n  //   }\n\n  const onDragEnd = result => {\n    const { destination, source, draggableId, type } = result\n\n    if (!destination) {\n      return\n    }\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return\n    }\n\n    if (type === \"column\") {\n      const newColumnOrder = Array.from(mainData.columnOrder)\n      newColumnOrder.splice(source.index, 1)\n      newColumnOrder.splice(destination.index, 0, draggableId)\n\n      const newState = {\n        ...mainData,\n        columnOrder: newColumnOrder\n      }\n      setMainData(newState)\n      return\n    }\n\n    const start = mainData.columns[source.droppableId]\n    const finish = mainData.columns[destination.droppableId]\n\n    if (start === finish) {\n      const newTaskIds = Array.from(start.taskIds)\n      newTaskIds.splice(source.index, 1)\n      newTaskIds.splice(destination.index, 0, draggableId)\n  \n      const newColumn = {...start, taskIds: newTaskIds}\n  \n      const newState = {\n        ...mainData,\n        columns: {\n          ...mainData.columns,\n          [newColumn.id]: newColumn\n        }\n      }\n  \n      setMainData(newState)\n      return\n    }\n\n    const startTaskIds = Array.from(start.taskIds)\n    startTaskIds.splice(source.index, 1)\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds\n    }\n\n    const finishTaskIds = Array.from(finish.taskIds)\n    finishTaskIds.splice(destination.index, 0, draggableId)\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds\n    }\n\n    const newState = {\n      ...mainData,\n      columns: {\n        ...mainData.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish\n      }\n    }\n\n    setMainData(newState)\n  }\n\n  const handleNewCard = newData => {\n    const newState = {\n      ...mainData,\n      tasks: {\n        ...mainData.tasks,\n        [newData.card.id]: {\n          id: newData.card.id,\n          content: newData.card.content\n        }\n      },\n      columns: {\n        ...mainData.columns,\n        [newData.column.id]: {\n          ...mainData.columns[newData.column.id],\n          taskIds: [\n            ...mainData.columns[newData.column.id].taskIds,\n            newData.card.id\n          ]\n        }\n      }\n    }\n    setMainData(newState)\n  }\n\n  const handleNewList = () => {\n    let newId = uuidv4()\n    const newState = {\n      ...mainData,\n      columns: {\n        ...mainData.columns,\n        [newId]: {\n          id: newId,\n          title: \"Click to Edit\",\n          taskIds: []\n        }\n      },\n      columnOrder: [\n        ...mainData.columnOrder,\n        newId\n      ]\n    }\n    setMainData(newState)\n  }\n  \n  let display = mainData.columnOrder.map((colId, i) => {\n    const column = mainData.columns[colId]\n    const tasks = column.taskIds.map(taskId => mainData.tasks[taskId])\n\n    return <Column key={column.id} column={column} tasks={tasks} index={i} handleNewCard={handleNewCard} />\n  })\n\n  return (\n    <div id=\"dashboard\">\n      <header className=\"dash-header\">\n        <button onClick={handleNewList}>Add List</button>\n      </header>\n      <DragDropContext\n        // onDragStart={onDragStart}\n        // onDragUpdate={onDragUpdate}\n        onDragEnd={onDragEnd}\n      >\n        <Droppable droppableId=\"all-columns\" direction=\"horizontal\" type=\"column\">\n          {(provided) => (\n            <div \n              className=\"col-container\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {display}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}